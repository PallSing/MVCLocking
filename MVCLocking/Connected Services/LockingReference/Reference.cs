//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCLocking.LockingReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryLock", Namespace="http://schemas.datacontract.org/2004/07/Landmark.Classes.Breaks")]
    [System.SerializableAttribute()]
    public partial class InventoryLock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvhCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockPositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDateTime {
            get {
                return this.CreationDateTimeField;
            }
            set {
                if ((this.CreationDateTimeField.Equals(value) != true)) {
                    this.CreationDateTimeField = value;
                    this.RaisePropertyChanged("CreationDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvhCode {
            get {
                return this.InvhCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvhCodeField, value) != true)) {
                    this.InvhCodeField = value;
                    this.RaisePropertyChanged("InvhCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockPositionCode {
            get {
                return this.LockPositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LockPositionCodeField, value) != true)) {
                    this.LockPositionCodeField = value;
                    this.RaisePropertyChanged("LockPositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesArea {
            get {
                return this.SalesAreaField;
            }
            set {
                if ((this.SalesAreaField.Equals(value) != true)) {
                    this.SalesAreaField = value;
                    this.RaisePropertyChanged("SalesArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationStandardParameters", Namespace="http://schemas.datacontract.org/2004/07/Landmark.Parameters.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ValidationStandardParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganisationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SystemDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganisationCode {
            get {
                return this.OrganisationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationCodeField, value) != true)) {
                    this.OrganisationCodeField = value;
                    this.RaisePropertyChanged("OrganisationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionCode {
            get {
                return this.PositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionCodeField, value) != true)) {
                    this.PositionCodeField = value;
                    this.RaisePropertyChanged("PositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SystemDate {
            get {
                return this.SystemDateField;
            }
            set {
                if ((this.SystemDateField.Equals(value) != true)) {
                    this.SystemDateField = value;
                    this.RaisePropertyChanged("SystemDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/Landmark.Classes.Internal")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LockingReference.ILandmarkSystemInventoryLock")]
    public interface ILandmarkSystemInventoryLock {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLockResponse")]
        MVCLocking.LockingReference.InventoryLock[] ListInventoryLock(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLockResponse")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.InventoryLock[]> ListInventoryLockAsync(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLockResponse")]
        MVCLocking.LockingReference.CreateInventoryLockResponse CreateInventoryLock(MVCLocking.LockingReference.CreateInventoryLockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLockResponse")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.CreateInventoryLockResponse> CreateInventoryLockAsync(MVCLocking.LockingReference.CreateInventoryLockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLockResponse")]
        MVCLocking.LockingReference.AmendInventoryLockResponse AmendInventoryLock(MVCLocking.LockingReference.AmendInventoryLockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLockResponse")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.AmendInventoryLockResponse> AmendInventoryLockAsync(MVCLocking.LockingReference.AmendInventoryLockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLockResponse")]
        MVCLocking.LockingReference.DeleteInventoryLockResponse DeleteInventoryLock(MVCLocking.LockingReference.DeleteInventoryLockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLock", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLockResponse")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.DeleteInventoryLockResponse> DeleteInventoryLockAsync(MVCLocking.LockingReference.DeleteInventoryLockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLockByCodeResponse")]
        MVCLocking.LockingReference.InventoryLock[] ListInventoryLockByCode(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/ListInventoryLockByCodeResponse")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.InventoryLock[]> ListInventoryLockByCodeAsync(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLockByCodeResponse" +
            "")]
        MVCLocking.LockingReference.CreateInventoryLockByCodeResponse CreateInventoryLockByCode(MVCLocking.LockingReference.CreateInventoryLockByCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/CreateInventoryLockByCodeResponse" +
            "")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.CreateInventoryLockByCodeResponse> CreateInventoryLockByCodeAsync(MVCLocking.LockingReference.CreateInventoryLockByCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLockByCodeResponse")]
        MVCLocking.LockingReference.AmendInventoryLockByCodeResponse AmendInventoryLockByCode(MVCLocking.LockingReference.AmendInventoryLockByCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/AmendInventoryLockByCodeResponse")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.AmendInventoryLockByCodeResponse> AmendInventoryLockByCodeAsync(MVCLocking.LockingReference.AmendInventoryLockByCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLockByCodeResponse" +
            "")]
        MVCLocking.LockingReference.DeleteInventoryLockByCodeResponse DeleteInventoryLockByCode(MVCLocking.LockingReference.DeleteInventoryLockByCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLockByCode", ReplyAction="http://tempuri.org/ILandmarkSystemInventoryLock/DeleteInventoryLockByCodeResponse" +
            "")]
        System.Threading.Tasks.Task<MVCLocking.LockingReference.DeleteInventoryLockByCodeResponse> DeleteInventoryLockByCodeAsync(MVCLocking.LockingReference.DeleteInventoryLockByCodeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInventoryLock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateInventoryLockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int[] salesAreaNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inventoryLockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int endTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string lockPositionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters;
        
        public CreateInventoryLockRequest() {
        }
        
        public CreateInventoryLockRequest(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters) {
            this.salesAreaNumbers = salesAreaNumbers;
            this.inventoryLockCode = inventoryLockCode;
            this.startDate = startDate;
            this.endDate = endDate;
            this.startTime = startTime;
            this.endTime = endTime;
            this.lockPositionCode = lockPositionCode;
            this.sessionId = sessionId;
            this.validationStandardParameters = validationStandardParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInventoryLockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateInventoryLockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CreateInventoryLockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public MVCLocking.LockingReference.Error[] errors;
        
        public CreateInventoryLockResponse() {
        }
        
        public CreateInventoryLockResponse(bool CreateInventoryLockResult, MVCLocking.LockingReference.Error[] errors) {
            this.CreateInventoryLockResult = CreateInventoryLockResult;
            this.errors = errors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AmendInventoryLock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AmendInventoryLockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int salesAreaNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inventoryLockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime currentStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int currentStartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int endTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string lockPositionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters;
        
        public AmendInventoryLockRequest() {
        }
        
        public AmendInventoryLockRequest(int salesAreaNumber, string inventoryLockCode, System.DateTime currentStartDate, int currentStartTime, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters) {
            this.salesAreaNumber = salesAreaNumber;
            this.inventoryLockCode = inventoryLockCode;
            this.currentStartDate = currentStartDate;
            this.currentStartTime = currentStartTime;
            this.startDate = startDate;
            this.endDate = endDate;
            this.startTime = startTime;
            this.endTime = endTime;
            this.lockPositionCode = lockPositionCode;
            this.sessionId = sessionId;
            this.validationStandardParameters = validationStandardParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AmendInventoryLockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AmendInventoryLockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AmendInventoryLockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public MVCLocking.LockingReference.Error[] errors;
        
        public AmendInventoryLockResponse() {
        }
        
        public AmendInventoryLockResponse(bool AmendInventoryLockResult, MVCLocking.LockingReference.Error[] errors) {
            this.AmendInventoryLockResult = AmendInventoryLockResult;
            this.errors = errors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteInventoryLock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteInventoryLockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int[] salesAreaNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inventoryLockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters;
        
        public DeleteInventoryLockRequest() {
        }
        
        public DeleteInventoryLockRequest(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, int startTime, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters) {
            this.salesAreaNumbers = salesAreaNumbers;
            this.inventoryLockCode = inventoryLockCode;
            this.startDate = startDate;
            this.startTime = startTime;
            this.validationStandardParameters = validationStandardParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteInventoryLockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteInventoryLockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool DeleteInventoryLockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public MVCLocking.LockingReference.Error[] errors;
        
        public DeleteInventoryLockResponse() {
        }
        
        public DeleteInventoryLockResponse(bool DeleteInventoryLockResult, MVCLocking.LockingReference.Error[] errors) {
            this.DeleteInventoryLockResult = DeleteInventoryLockResult;
            this.errors = errors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInventoryLockByCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateInventoryLockByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] salesAreaCodes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inventoryLockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int endTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string lockPositionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters;
        
        public CreateInventoryLockByCodeRequest() {
        }
        
        public CreateInventoryLockByCodeRequest(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters) {
            this.salesAreaCodes = salesAreaCodes;
            this.inventoryLockCode = inventoryLockCode;
            this.startDate = startDate;
            this.endDate = endDate;
            this.startTime = startTime;
            this.endTime = endTime;
            this.lockPositionCode = lockPositionCode;
            this.sessionId = sessionId;
            this.validationStandardParameters = validationStandardParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInventoryLockByCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateInventoryLockByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CreateInventoryLockByCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public MVCLocking.LockingReference.Error[] errors;
        
        public CreateInventoryLockByCodeResponse() {
        }
        
        public CreateInventoryLockByCodeResponse(bool CreateInventoryLockByCodeResult, MVCLocking.LockingReference.Error[] errors) {
            this.CreateInventoryLockByCodeResult = CreateInventoryLockByCodeResult;
            this.errors = errors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AmendInventoryLockByCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AmendInventoryLockByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string salesAreaCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inventoryLockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime currentStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int currentStartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int endTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string lockPositionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters;
        
        public AmendInventoryLockByCodeRequest() {
        }
        
        public AmendInventoryLockByCodeRequest(string salesAreaCode, string inventoryLockCode, System.DateTime currentStartDate, int currentStartTime, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters) {
            this.salesAreaCode = salesAreaCode;
            this.inventoryLockCode = inventoryLockCode;
            this.currentStartDate = currentStartDate;
            this.currentStartTime = currentStartTime;
            this.startDate = startDate;
            this.endDate = endDate;
            this.startTime = startTime;
            this.endTime = endTime;
            this.lockPositionCode = lockPositionCode;
            this.sessionId = sessionId;
            this.validationStandardParameters = validationStandardParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AmendInventoryLockByCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AmendInventoryLockByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AmendInventoryLockByCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public MVCLocking.LockingReference.Error[] errors;
        
        public AmendInventoryLockByCodeResponse() {
        }
        
        public AmendInventoryLockByCodeResponse(bool AmendInventoryLockByCodeResult, MVCLocking.LockingReference.Error[] errors) {
            this.AmendInventoryLockByCodeResult = AmendInventoryLockByCodeResult;
            this.errors = errors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteInventoryLockByCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteInventoryLockByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] salesAreaCodes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inventoryLockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters;
        
        public DeleteInventoryLockByCodeRequest() {
        }
        
        public DeleteInventoryLockByCodeRequest(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, int startTime, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters) {
            this.salesAreaCodes = salesAreaCodes;
            this.inventoryLockCode = inventoryLockCode;
            this.startDate = startDate;
            this.startTime = startTime;
            this.validationStandardParameters = validationStandardParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteInventoryLockByCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteInventoryLockByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool DeleteInventoryLockByCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public MVCLocking.LockingReference.Error[] errors;
        
        public DeleteInventoryLockByCodeResponse() {
        }
        
        public DeleteInventoryLockByCodeResponse(bool DeleteInventoryLockByCodeResult, MVCLocking.LockingReference.Error[] errors) {
            this.DeleteInventoryLockByCodeResult = DeleteInventoryLockByCodeResult;
            this.errors = errors;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILandmarkSystemInventoryLockChannel : MVCLocking.LockingReference.ILandmarkSystemInventoryLock, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LandmarkSystemInventoryLockClient : System.ServiceModel.ClientBase<MVCLocking.LockingReference.ILandmarkSystemInventoryLock>, MVCLocking.LockingReference.ILandmarkSystemInventoryLock {
        
        public LandmarkSystemInventoryLockClient() {
        }
        
        public LandmarkSystemInventoryLockClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LandmarkSystemInventoryLockClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LandmarkSystemInventoryLockClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LandmarkSystemInventoryLockClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCLocking.LockingReference.InventoryLock[] ListInventoryLock(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.ListInventoryLock(salesAreaNumbers, inventoryLockCode, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.InventoryLock[]> ListInventoryLockAsync(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.ListInventoryLockAsync(salesAreaNumbers, inventoryLockCode, startDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MVCLocking.LockingReference.CreateInventoryLockResponse MVCLocking.LockingReference.ILandmarkSystemInventoryLock.CreateInventoryLock(MVCLocking.LockingReference.CreateInventoryLockRequest request) {
            return base.Channel.CreateInventoryLock(request);
        }
        
        public bool CreateInventoryLock(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters, out MVCLocking.LockingReference.Error[] errors) {
            MVCLocking.LockingReference.CreateInventoryLockRequest inValue = new MVCLocking.LockingReference.CreateInventoryLockRequest();
            inValue.salesAreaNumbers = salesAreaNumbers;
            inValue.inventoryLockCode = inventoryLockCode;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.startTime = startTime;
            inValue.endTime = endTime;
            inValue.lockPositionCode = lockPositionCode;
            inValue.sessionId = sessionId;
            inValue.validationStandardParameters = validationStandardParameters;
            MVCLocking.LockingReference.CreateInventoryLockResponse retVal = ((MVCLocking.LockingReference.ILandmarkSystemInventoryLock)(this)).CreateInventoryLock(inValue);
            errors = retVal.errors;
            return retVal.CreateInventoryLockResult;
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.CreateInventoryLockResponse> CreateInventoryLockAsync(MVCLocking.LockingReference.CreateInventoryLockRequest request) {
            return base.Channel.CreateInventoryLockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MVCLocking.LockingReference.AmendInventoryLockResponse MVCLocking.LockingReference.ILandmarkSystemInventoryLock.AmendInventoryLock(MVCLocking.LockingReference.AmendInventoryLockRequest request) {
            return base.Channel.AmendInventoryLock(request);
        }
        
        public bool AmendInventoryLock(int salesAreaNumber, string inventoryLockCode, System.DateTime currentStartDate, int currentStartTime, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters, out MVCLocking.LockingReference.Error[] errors) {
            MVCLocking.LockingReference.AmendInventoryLockRequest inValue = new MVCLocking.LockingReference.AmendInventoryLockRequest();
            inValue.salesAreaNumber = salesAreaNumber;
            inValue.inventoryLockCode = inventoryLockCode;
            inValue.currentStartDate = currentStartDate;
            inValue.currentStartTime = currentStartTime;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.startTime = startTime;
            inValue.endTime = endTime;
            inValue.lockPositionCode = lockPositionCode;
            inValue.sessionId = sessionId;
            inValue.validationStandardParameters = validationStandardParameters;
            MVCLocking.LockingReference.AmendInventoryLockResponse retVal = ((MVCLocking.LockingReference.ILandmarkSystemInventoryLock)(this)).AmendInventoryLock(inValue);
            errors = retVal.errors;
            return retVal.AmendInventoryLockResult;
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.AmendInventoryLockResponse> AmendInventoryLockAsync(MVCLocking.LockingReference.AmendInventoryLockRequest request) {
            return base.Channel.AmendInventoryLockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MVCLocking.LockingReference.DeleteInventoryLockResponse MVCLocking.LockingReference.ILandmarkSystemInventoryLock.DeleteInventoryLock(MVCLocking.LockingReference.DeleteInventoryLockRequest request) {
            return base.Channel.DeleteInventoryLock(request);
        }
        
        public bool DeleteInventoryLock(int[] salesAreaNumbers, string inventoryLockCode, System.DateTime startDate, int startTime, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters, out MVCLocking.LockingReference.Error[] errors) {
            MVCLocking.LockingReference.DeleteInventoryLockRequest inValue = new MVCLocking.LockingReference.DeleteInventoryLockRequest();
            inValue.salesAreaNumbers = salesAreaNumbers;
            inValue.inventoryLockCode = inventoryLockCode;
            inValue.startDate = startDate;
            inValue.startTime = startTime;
            inValue.validationStandardParameters = validationStandardParameters;
            MVCLocking.LockingReference.DeleteInventoryLockResponse retVal = ((MVCLocking.LockingReference.ILandmarkSystemInventoryLock)(this)).DeleteInventoryLock(inValue);
            errors = retVal.errors;
            return retVal.DeleteInventoryLockResult;
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.DeleteInventoryLockResponse> DeleteInventoryLockAsync(MVCLocking.LockingReference.DeleteInventoryLockRequest request) {
            return base.Channel.DeleteInventoryLockAsync(request);
        }
        
        public MVCLocking.LockingReference.InventoryLock[] ListInventoryLockByCode(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.ListInventoryLockByCode(salesAreaCodes, inventoryLockCode, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.InventoryLock[]> ListInventoryLockByCodeAsync(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.ListInventoryLockByCodeAsync(salesAreaCodes, inventoryLockCode, startDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MVCLocking.LockingReference.CreateInventoryLockByCodeResponse MVCLocking.LockingReference.ILandmarkSystemInventoryLock.CreateInventoryLockByCode(MVCLocking.LockingReference.CreateInventoryLockByCodeRequest request) {
            return base.Channel.CreateInventoryLockByCode(request);
        }
        
        public bool CreateInventoryLockByCode(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters, out MVCLocking.LockingReference.Error[] errors) {
            MVCLocking.LockingReference.CreateInventoryLockByCodeRequest inValue = new MVCLocking.LockingReference.CreateInventoryLockByCodeRequest();
            inValue.salesAreaCodes = salesAreaCodes;
            inValue.inventoryLockCode = inventoryLockCode;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.startTime = startTime;
            inValue.endTime = endTime;
            inValue.lockPositionCode = lockPositionCode;
            inValue.sessionId = sessionId;
            inValue.validationStandardParameters = validationStandardParameters;
            MVCLocking.LockingReference.CreateInventoryLockByCodeResponse retVal = ((MVCLocking.LockingReference.ILandmarkSystemInventoryLock)(this)).CreateInventoryLockByCode(inValue);
            errors = retVal.errors;
            return retVal.CreateInventoryLockByCodeResult;
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.CreateInventoryLockByCodeResponse> CreateInventoryLockByCodeAsync(MVCLocking.LockingReference.CreateInventoryLockByCodeRequest request) {
            return base.Channel.CreateInventoryLockByCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MVCLocking.LockingReference.AmendInventoryLockByCodeResponse MVCLocking.LockingReference.ILandmarkSystemInventoryLock.AmendInventoryLockByCode(MVCLocking.LockingReference.AmendInventoryLockByCodeRequest request) {
            return base.Channel.AmendInventoryLockByCode(request);
        }
        
        public bool AmendInventoryLockByCode(string salesAreaCode, string inventoryLockCode, System.DateTime currentStartDate, int currentStartTime, System.DateTime startDate, System.DateTime endDate, int startTime, int endTime, string lockPositionCode, int sessionId, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters, out MVCLocking.LockingReference.Error[] errors) {
            MVCLocking.LockingReference.AmendInventoryLockByCodeRequest inValue = new MVCLocking.LockingReference.AmendInventoryLockByCodeRequest();
            inValue.salesAreaCode = salesAreaCode;
            inValue.inventoryLockCode = inventoryLockCode;
            inValue.currentStartDate = currentStartDate;
            inValue.currentStartTime = currentStartTime;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.startTime = startTime;
            inValue.endTime = endTime;
            inValue.lockPositionCode = lockPositionCode;
            inValue.sessionId = sessionId;
            inValue.validationStandardParameters = validationStandardParameters;
            MVCLocking.LockingReference.AmendInventoryLockByCodeResponse retVal = ((MVCLocking.LockingReference.ILandmarkSystemInventoryLock)(this)).AmendInventoryLockByCode(inValue);
            errors = retVal.errors;
            return retVal.AmendInventoryLockByCodeResult;
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.AmendInventoryLockByCodeResponse> AmendInventoryLockByCodeAsync(MVCLocking.LockingReference.AmendInventoryLockByCodeRequest request) {
            return base.Channel.AmendInventoryLockByCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MVCLocking.LockingReference.DeleteInventoryLockByCodeResponse MVCLocking.LockingReference.ILandmarkSystemInventoryLock.DeleteInventoryLockByCode(MVCLocking.LockingReference.DeleteInventoryLockByCodeRequest request) {
            return base.Channel.DeleteInventoryLockByCode(request);
        }
        
        public bool DeleteInventoryLockByCode(string[] salesAreaCodes, string inventoryLockCode, System.DateTime startDate, int startTime, MVCLocking.LockingReference.ValidationStandardParameters validationStandardParameters, out MVCLocking.LockingReference.Error[] errors) {
            MVCLocking.LockingReference.DeleteInventoryLockByCodeRequest inValue = new MVCLocking.LockingReference.DeleteInventoryLockByCodeRequest();
            inValue.salesAreaCodes = salesAreaCodes;
            inValue.inventoryLockCode = inventoryLockCode;
            inValue.startDate = startDate;
            inValue.startTime = startTime;
            inValue.validationStandardParameters = validationStandardParameters;
            MVCLocking.LockingReference.DeleteInventoryLockByCodeResponse retVal = ((MVCLocking.LockingReference.ILandmarkSystemInventoryLock)(this)).DeleteInventoryLockByCode(inValue);
            errors = retVal.errors;
            return retVal.DeleteInventoryLockByCodeResult;
        }
        
        public System.Threading.Tasks.Task<MVCLocking.LockingReference.DeleteInventoryLockByCodeResponse> DeleteInventoryLockByCodeAsync(MVCLocking.LockingReference.DeleteInventoryLockByCodeRequest request) {
            return base.Channel.DeleteInventoryLockByCodeAsync(request);
        }
    }
}
